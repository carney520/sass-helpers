////
/// @group grid
/// @access public
////

@mixin g-context ($count, $root: false){
  $old-grid-count: $grid-count;
  $grid-count: $count !global;

  @if $root {
    @at-root {
      @content;
    }
  } @else {
    @content;
  }
  $grid-count: $old-grid-count !global;
}

/// 定义行
/// @param {Number} $count [null] - 行数, 如果是null，将使用默认的行数(12)
/// @param {Number} $width []
/// @param {List} $options - 参数，可选 nest 和 collapse , unclearfix

@mixin g-row (
  $count: null,
  $gutter: $grid-gutter,
  $options: ()
) {
  // 启用flex
  @if $enable-flex {
    display: flex;
    flex-wrap: wrap;
  } @else if index($options, unclearfix) == null {
    @include clearfix;
  }

  //嵌套row
  @if index($options, nest) != null {
    // 处理gutter
    // 对于嵌套row，即合并row 和col，col是由gutter／2 的padding的，所以需要消除这个padding
    @if is-map($gutter) {
      //响应式的gutter
      @each $breakpoint, $size in $gutter {
        $margin: convert-to-rem($size / -2);
        @include breakpoint($breakpoint) {
          margin-left: $margin;
          margin-right: $margin;
        }
      }
    } @else if is-number($gutter){
      $margin: convert-to-rem($gutter);
      margin-left: $margin;
      margin-right: $margin;
    }

    // 嵌套row，即col已经使用了collapse，所以没有padding，不需要消除
    @if index($options, collapse) != null {
      margin-left: 0;
      margin-right: 0;
    }
  }
  // 普通row
  @else {
    margin-left: auto;
    margin-right: auto;
  }



  //自定义列数
  @if $count != null {
    @include g-context($count) {
      @content;
    }
  }
}
