// 生成网格类


////
/// @group grid
/// @access public
////

///BEM 风格
// TODO 5 行，
// 命名可定制
@mixin generate-bem-grid-classes {
  $temp: $combined-style-modifier;
  $temp2: $element-isolate;
  $combined-style-modifier: false !global;
  $element-isolate: true !global;

  //row
  @include block(row) {
    @include g-row;

    //nested row: row__row
    & & {
      @include g-row($options: (nest unclearfix));
    }

    @include modifier(expanded) {
      max-width: none;
      @include child(bem-block(row)) {
        margin-left: auto;
        margin-right: auto;
      }
    }

    // column
    @include element(col) {
      @include g-col;

      // .row--collapse > .col
      @include shadow-child(collapse) {
        @include g-col-collapse;
      }
    }

  }

  // responsive grid
  @include each-breakpoint {
    @include block(row) {
      // collapse row
      @include modifier(collapse) {
        @include at($keyword, $without-media: true) {
          @include child(bem-element(row, col)) {
            @include g-col-collapse;
          }
        }
      }

      // uncollapse row
      @include modifier(uncollapse) {
        @include at($keyword, $without-media: true) {
          @include child(bem-element(row, col)) {
            $gutter: if(is-map($grid-gutter), get-breakpoint-val($grid-gutter, $keyword), $gutter);
            @if $gutter != null {
              @include g-col-uncollapse($gutter);
            }
          }
        }
      }

      // cloumn
      @include element(col) {
        @for $i from 1 through $grid-count {
          //col width
          // col--i@breakpoint
          @include modifier($i) {
            @include at($keyword, $without-media: true) {
              width: cal-col-width($i);
            }
          }
          //col position
          @if $i < $grid-count {
            //col--push-i@breakpoint
            @include modifier(push-#{$i}) {
              @include at($keyword, $without-media: true) {
                @include g-col-position($i)
              }
            }
            @include modifier(pull-#{$i}) {
              @include at($keyword, $without-media: true) {
                @include g-col-position(-$i)
              }
            }
          }
          //offset
          //col--offset-i@breakpoint
          @include modifier(offset-#{$i - 1}) {
            @include at($keyword, $without-media: true) {
              @include g-col-offset($i - 1)
            }
          }

        }
        //centering
        //col--center@breakpoint
        @include modifier(center) {
          @include at($keyword, $without-media: true) {
            @include g-col-position(center);
          }
        }
        // unposition
        @include modifier(uncenter,push-0, pull-0) {
          @include at($keyword, $without-media: true) {
            @include g-col-unposition;
          }
        }
      }
    }
  }



  $combined-style-modifier: $temp !global;
  $element-isolate: $temp2 !global;
}
